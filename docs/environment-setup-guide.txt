Environment Setup Guide:


üìù Local Development (.env):
  BASE_URL=http://localhost:5500/         # Injected as {{BASE_URL}} for local testing
  ASSET_URL=/src/img/                     # Injected as {{ASSET_URL}} for local image paths
  CSS_FILE=styles.css                     # Injected as {{CSS_FILE}} for expanded CSS with source maps
  ROBOTS=index,follow                     # Injected as {{ROBOTS}} for SEO (public indexing)
  CANONICAL_URL=http://localhost:5500/    # Injected as {{CANONICAL_URL}} for local canonical URL


üöÄ Production (.env.production):
  BASE_URL=https://iknittheweb.com/              # {{BASE_URL}} for live site
  ASSET_URL=https://iknittheweb.com/src/img/     # {{ASSET_URL}} for CDN or custom domain
  CSS_FILE=styles.min.css                        # {{CSS_FILE}} for minified CSS
  ROBOTS=index,follow                            # {{ROBOTS}} for SEO (public indexing)
  CANONICAL_URL=https://iknittheweb.com/         # {{CANONICAL_URL}} for canonical production URL


üåê Alternate Development (.env.alt):
  BASE_URL=http://localhost:5500/                # {{BASE_URL}} for alternate local dev
  ASSET_URL=/src/img/                            # {{ASSET_URL}} for asset paths
  CSS_FILE=styles.css                            # {{CSS_FILE}} for expanded CSS
  ROBOTS=index,follow                            # {{ROBOTS}} for SEO (public indexing)
  CANONICAL_URL=http://localhost:5500/           # {{CANONICAL_URL}} for alternate canonical URL


To use the alternate environment, run:
  npm run alt
This will use .env.alt and generate the site for alternate local development or staging.

New supported environment variables:
  BASE_URL, ASSET_URL, CSS_FILE, ROBOTS, CANONICAL_URL

Alternate environments:
  .env.alt (local/staging), .env.netlify-alt (Netlify)

For Netlify builds, use .env.netlify-alt and configure build settings accordingly.



Template & Build System Notes:
* All pages are generated from template files (e.g., src/templates/new-page.template.html).
* Placeholders are replaced during build using environment variables and page-specific data:
    - {{TITLE}}, {{DESCRIPTION}}, {{KEYWORDS}}, {{AUTHOR}}: Set in template or page config.
    - {{ROBOTS}}, {{CANONICAL_URL}}, {{BASE_URL}}, {{ASSET_URL}}, {{CSS_FILE}}: Injected from environment files for each build scenario.
    - {{OG_*}}, {{TWITTER_*}}, {{FAVICON_URL}}, {{GOOGLE_FONTS_LINK}}: Set in template or page config.
* To create a new page:
  1. Copy and rename the template file in src/templates (e.g., new-page.template.html to about.template.html).
  2. Fill in all placeholders (meta tags, page data, structured data, CSS/JS) with page-specific content as described in the template comments.
  3. Run `npm run local` (development), `npm run deploy` (production), or `npm run alt` (alternate/staging) to generate the final HTML in dist/pages.
* Environment variables from .env, .env.production, .env.alt, or .env.netlify-alt are injected automatically for each build scenario.
* Asset paths, CSS file names, robots, and canonical URL are controlled by environment variables for flexible deployment.


Best Practices:
- Use page-specific CSS files if compiling with PurgeCSS; global CSS is optional.
- Fill all meta tag, Open Graph, Twitter Card, and structured data placeholders for SEO and social sharing.
- Use {{ASSET_URL}} for all asset references in templates for correct path resolution.
- Page-specific JS and CSS can be injected via placeholders if needed.


For troubleshooting or further setup, see README.md or ask GitHub Copilot for help.
